AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Twitter Following Tracker

Globals:
  Function:
    Runtime: nodejs16.x
    Handler: index.handler
    MemorySize: 128
    Layers:
      - !Ref ShareLibraryLayer
    Environment:
      Variables:
        TABLE_NAME: !Ref TrackingUserTable
        BEARER_TOKEN : !Ref BearerToken
        AUTHORIZATION: !Ref Authrorization
        X_CSRF_TOKEN: !Ref XCsrfToken
        COOKIE_AUTH_TOKEN: !Ref CookieAuthToken
        TELEGRAM_BOT_TOKEN: !Ref TelegramBotToken
Parameters:
  BearerToken:
    Type: String
  Authrorization:
    Type: String
  XCsrfToken:
    Type: String
  CookieAuthToken:
    Type: String
  TelegramBotToken:
    Type: String
  
Resources:
  TrackingUserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        # - AttributeName: createTime
        #   AttributeType: S
        - AttributeName: victimType
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: trackingIndex
          KeySchema:
          - AttributeName: victimType
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
          Projection:
            ProjectionType: ALL

##################################################################################
  ShareLibraryLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: src/common
      RetentionPolicy : Delete
    Metadata:
      BuildMethod: nodejs16.x

##################################################################################
  # ApiGatewayApi:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: DEV
  #     Cors:
  #       AllowMethods: "'*'"
  #       AllowHeaders: "'*'"
  #       AllowOrigin: "'*'"
##################################################################################
  preflightFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri : src/public/preflight
      Events:
        OptionApi:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: OPTIONS
            # RestApiId:
            #   Ref: ApiGatewayApi

##################################################################################
  TwitterHourlyScheduler:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 512
      CodeUri: src/schedule/twitter/check_and_update/src
      Timeout: 900
      Events:
        ScheduleTrigger:
          Type: Schedule
          Properties:
            Schedule: 'rate(2 hours)'

  # GetAppUserApi:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: src/public/user/GET/src
  #     Runtime: nodejs16.x
  #     Timeout: 10
  #     Events:
  #       GetChannelApiEvent:
  #         Type: HttpApi
  #         Properties:
  #           Path: /api/user
  #           Method: get
  
  # ListVictimsApi:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: src/public/victim/LIST/src
  #     Runtime: nodejs16.x
  #     Timeout: 10
  #     Events:
  #       GetChannelApiEvent:
  #         Type: HttpApi
  #         Properties:
  #           Path: /api/victims
  #           Method: get

  # ListFollowingsApi:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: src/public/following/LIST/src
  #     Runtime: nodejs16.x
  #     Timeout: 10
  #     Events:
  #       GetChannelApiEvent:
  #         Type: HttpApi
  #         Properties:
  #           Path: /api/followings
  #           Method: get

  # PostAppUserApi:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: src/public/user/POST
  #     Runtime: nodejs16.x
  #     Timeout: 5
  #     Events:
  #       GetChannelApiEvent:
  #         Type: HttpApi
  #         Properties:
  #           Path: /api/user
  #           Method: post
Outputs:
#   WebEndpoint:
#     Description: "API Gateway endpoint URL for DEV stage"
#     Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/DEV"

  Database:
    Description: "DynamoDB endpoint"
    Value: !Ref TrackingUserTable